CMP416 TEST  
TIME ALLOWED 1HR  
a. Various Process Models have evolved over time, with the 
   water fall model usually  considered as being the one 
   which other models are based on.  The Models tend to fall 
   into 1wo  categories based on 'Construction 'And 
   'Evolution'. Paradigm  Explain the Concept of'Construction 
   'and 'Evolution' paradigm with respect to process models. 
   Discuss one example  (Construction' and 'Evolution") and  
   of model in each category  highlight their Advantages and 
   Disadvantages.(10marks)

b. Software is often not tremendously robust - in fact, it is 
   often full of bugs. If a more tangible product, a 
   refrigerator, say, behaved differently from what is 
   expected, you'd  take it back to the shop and demand your 
   money back! However, it is the nature of  software that it 
   is very difficult - some say impossible - to release it 
   100% bug-free  What is Software quality? Discuss the 
   issues regarding software quality.(5marks)  

c. One of the issues with E-commerce Sites concerns WYSIWYG, 
   many users complained  about not getting what was 
   advertised on the site or what they ordered for. Suggest 
   ways  to improve on what you order is what you get.
   (5marks)  

2a. If a customer or user is dissatisfied with a system 
    (product), the developer can always claim to have 
    fulfilled their obligations, provided they have supplied 
    what was originally  required. 'The user, however, may 
    feel that the original specification was inadequate. In  
    your opinion, whose fault is that? The users? Or the 
    developer's or Both? why do you think so?(2marks)  

b. Consider the research conducted by kappel ct al(2004). The 
   researcher attempts to find  out whether or not web 
   development is same as other traditional systems 
   development.  The Researcher identifies the four web 
   application development characteristics. With the  aid of 
   the diagram, Explain the four characteristics of web 
   development and their  challenges(8marks)  





---------------------------------------------------------------









ANSWERS 








QUESTION 1

a. Various Process Models have evolved over time, with the 
   water fall model usually considered as being the one 
   which other models are based on. The Models tend to fall 
   into two  categories based on 'Construction 'And 
   'Evolution' Paradigm. Explain the Concept of'Construction 
   'and 'Evolution' paradigm with respect to process models. 
   Discuss one example  (Construction' and 'Evolution")  
   of model in each category  highlight their Advantages and 
   Disadvantages.(10marks)
ans: Construction Paradigm:
     The construction paradigm in process models focuses on building the software product from scratch according to a predefined plan. This involves clear, sequential steps that start from requirements gathering to maintenance.

     Example: Waterfall Model
     Advantages:
     - Simple and Easy to Understand: Clear structure and 
       well-defined stages make it straightforward to manage.
     - Orderly Progress: Each phase must be completed before 
       moving on to the next, ensuring thorough documentation 
       and review.
     Disadvantages:
     - Inflexible to Changes: Once a phase is completed, it is 
       difficult to go back and make changes without starting 
       from scratch
     - Late Testing: Testing only begins after development is 
       complete, which can lead to discovering defects late in 
       the process.

     Evolution Paradigm:
     The evolution paradigm emphasizes the iterative and 
     incremental development of software. It allows for 
     continuous refinement and adaptation of the software 
     product based on feedback and changing requirements.
     
     Example: Agile Model
     Advantages:
     - Flexibility and Adaptability: Frequent iterations allow 
       for adjustments based on feedback, making it suitable for 
       dynamic environments.
     - Early and Continuous Delivery: Working software is 
       delivered early and updated regularly, ensuring that 
       users see progress.
     Disadvantages:
     - Requires Strong Collaboration: Effective communication 
       and collaboration among team members and stakeholders are 
       crucial.
     - Can Be Difficult to Manage: Frequent changes and 
       iterations can make project tracking and documentation 
       challenging.

b. Software is often not tremendously robust - in fact, it is 
   often full of bugs. If a more tangible product, a 
   refrigerator, say, behaved differently from what is 
   expected, you'd take it back to the shop and demand your 
   money back! However, it is the nature of software that it 
   is very difficult - some say impossible - to release it 
   100% bug-free  What is Software quality? Discuss the 
   issues regarding software quality.(5marks)  
ans: Software Quality:
     Software quality refers to the degree to which a software 
     product meets the specified requirements and satisfies the 
     needs and expectations of its users. It encompasses various 
     attributes such as functionality, reliability, usability, 
     efficiency, maintainability, and portability.
     
     Issues Regarding Software Quality:
     - Bugs and Defects: Despite rigorous testing, software 
       often contains bugs that can affect its performance and 
       reliability.
     - Complexity: The complexity of software systems can lead 
       to unforeseen issues and interactions, making it 
       difficult to ensure high quality.
     - Evolving Requirements: Changing user requirements can 
       lead to frequent updates and modifications, increasing 
       the risk of introducing new bugs.
     - Testing Limitations: Comprehensive testing is 
       time-consuming and resource-intensive, and it is 
       impossible to test all possible scenarios.


c. One of the issues with E-commerce Sites concerns WYSIWYG, 
   many users complained about not getting what was 
   advertised on the site or what they ordered for. Suggest 
   ways  to improve on what you order is what you get.
   (5marks)
ans: Improving WYSIWYG (What You See Is What You Get) in 
     E-commerce:
     - Accurate Product Descriptions: Ensure that product 
       descriptions are detailed, accurate, and up-to-date.
     - High-Quality Images: Use high-resolution images and 
       provide multiple views of the product to give a realistic 
       representation.
     - Customer Reviews and Ratings: Encourage customers to 
       leave reviews and ratings, which can provide additional 
       insights into the product.
     - Augmented Reality (AR): Implement AR features that allow 
       users to visualize the product in their environment 
       before making a purchase.
     - Clear Return Policies: Provide clear and hassle-free 
       return policies to build customer trust and confidence.


Question 2

2a. If a customer or user is dissatisfied with a system 
    (product), the developer can always claim to have 
    fulfilled their obligations, provided they have supplied 
    what was originally required. 'The user, however, may 
    feel that the original specification was inadequate. In  
    your opinion, whose fault is that? The users? Or the 
    developer's or Both? why do you think so?(2marks)
ans: In my opinion, both the user and the developer share the 
     responsibility for inadequate specifications.

     - User’s Responsibility: Users should provide clear, 
       comprehensive, and detailed requirements to ensure that 
       the developer understands their needs and expectations.
     - Developer’s Responsibility: Developers should actively 
       engage with users to clarify requirements, ask questions, 
       and validate assumptions to ensure that they fully 
       understand the user’s needs.
     - Shared Responsibility: Effective communication and 
       collaboration between users and developers are crucial. 
       Both parties need to work together to refine and validate 
       the specifications to ensure that the final product meets 
       the user’s needs.


b. Consider the research conducted by kappel et al(2004). The 
   researcher attempts to find out whether or not web 
   development is same as other traditional systems 
   development. The Researcher identifies the four web 
   application development characteristics. With the  aid of 
   the diagram, Explain the four characteristics of web 
   development and their challenges(8marks)  
    - software product, 
    - its development,
    - its use and 
    - its evolution.
ans: 1. Software Product:
        - Description: Web applications are dynamic and content-driven 
          software products that are delivered over the internet. Unlike 
          traditional software, web applications are continuously accessible 
          and often involve complex interactions between the client (browser) 
          and the server.
        - Challenges:
          - Scalability: Ensuring the software can handle increasing numbers 
            of users and data volume.
          - Security: Protecting sensitive data from threats like hacking and 
            unauthorized access.
          - Performance: Maintaining fast load times and responsiveness under 
            varying traffic conditions.
     
     2. Development:
        - Description: Web development involves shorter and more iterative 
          development cycles compared to traditional software development. It 
          requires rapid prototyping, continuous integration, and deployment 
          to meet the evolving demands of users and businesses.
        - Challenges:
          - Continuous Delivery: Releasing updates frequently without 
            disrupting user experience.
          - Cross-Platform Compatibility: Ensuring the application works 
            consistently across different browsers and devices.
          - Rapid Changes: Adapting to new technologies, tools, and frameworks 
            that emerge frequently in the web development landscape.
     
     3. Use:
        - Description: The use of web applications is characterized by high 
          levels of interactivity and user engagement. Users expect real-time 
          feedback, personalized experiences, and seamless interactions with 
          the software.
        - Challenges:
          - User Experience (UX): Designing interfaces that are intuitive, 
                                  responsive, and accessible to all users.
          - Interactivity: Implementing features that allow real-time updates 
                           and interactions without sacrificing performance.
          - Accessibility: Ensuring the application is usable by people with 
                           various disabilities, adhering to web accessibility 
                           standards.
     
     4. Evolution:
        - Description: Web applications are continuously evolving due to the 
          fast-paced nature of the web environment. They require frequent 
          updates and enhancements to stay relevant, address user feedback, 
          and adapt to new technologies.
        - Challenges:
          - Maintainability: Managing the codebase over time, ensuring that 
                             updates don’t introduce new bugs or degrade 
                             performance.
          - Backward Compatibility: Ensuring that new versions of the 
                                    application work well with older systems 
                                    and browsers.
          - Legacy Systems Integration: Integrating new features with existing 
                                        systems and data without causing 
                                        disruptions

To Draw the diagram - Checkout 👇
👉👉Part B (Dr Anne Slide 1 page 5)👈👈
