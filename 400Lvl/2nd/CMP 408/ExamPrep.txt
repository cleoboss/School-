CMP 408 EXAM PREP


----------------------------------------------------------------


SLIDE 1




INFORMATION SECURITY


Brief History

1a. Who did an intrusion on a pentagon computer and in what year?
ans: Kevin Mitnick in 1983

b. How much did the first worm ever created cause in damages and who 
   created it?
ans: It cost $50,000 and was created by Robert Tappan

c. Who intruded the American bank computer and stole 10 million dollars 
   and in what year?
ans: Vladimir Levin did in the year 1994

d. Which 16 year old kid infiltrated a NASA computer and had access to 
   data worth 1.7 millions dollars and in what year?
ans: Jonathan James in the year 1999
  
e. List the 4 goals of Computer Security?
ans: - Integrity
     - Confidentiality
     - Reliability
     - Authentication

e1. Explain the 4 goals of Computer Security?
ans: - Integrity: Guarantee that the data is what we expect
     - Confidentiality: The information must just be accessible to the authorized people
     - Reliability: Computers should work without having unexpected problems
     - Authentication: Guarantee that only authorized persons can access to the resources

g. List the 3 types of Security?
ans: Network Security
     System and Software Security
     Physical Security

h. List 4 common attacks?
ans: Network attacks
     Web attacks
     OS, applications and software attacks
     Social Engineering

h1. Give 2 examples for each common attacks listed?
ans: Network attacks - (e.g Packet sniffing, man-in-the-middle, DNS 
                       hacking)
     Web attacks -     (e.g Phishing, SQL Injection, Cross Site Scripting)
     OS, applications and software attacks - (e.g Virus, Trojan, Worms, 
                       Rootkits, Buffer Overflow)
     Social Engineering

i. What is a virus?
ans: It's a piece of code that automatically reproduces itself. It‚Äôs 
     attached to other programs or files, but requires user intervention 
     to propagate

j. What is a worm?
ans: It's a piece of code that automatically reproduces itself over the 
     Network. It doesn‚Äôt need user intervention to propagate (autonomous)

k. What is a Backdoor?
ans: A backdoor is a program placed by a black-hacker that allows him to 
     access a system. A backdoor have many functionalities such as 
     keyboard-sniffer, display spying, etc

l. What is a Trojan?
ans: A Trojan is a software that seems useful in the beginning, but is 
     actually hiding a malicious functionality

m. What is RootKits (the ultimate virus)?
ans: Rootkits operate like backdoor and Trojan, but also modify existing 
     programs in the OS. That allows a black-hacker to control the system without being detected.A rootkit can be in user-mode or in kernel-mode

n. What is the goal of backdoor, Trojan and rootkits?
ans: The goal of backdoor, Trojan and rootkits is to take possession of a 
     machine subsequently through an infection made via a backdoor

o. What is Social Engineering?
ans: Manipulating a person(s) into divulging confidential information

p. List the types of Password attacks?
ans: Password guessing
     Dictionary attacks
     Rainbow table

q. What are the below?
   - Vulnerability
   - Threat
   - Countermeasure
ans: - Vulnerability: point where a system is susceptible to attack
     - Threat: possible danger to the system
     - Countermeasure: techniques for protecting the system

r. List 4 techniques for achieving security (Computer and Network Security)?
ans: - Cryptography
     - Secure networks
     - Antivirus software
     - Firewalls

s. List 4 "safe computing" practices that users can practice to improve 
   security
ans: - Not downloading from unsafe websites
     - Not opening attachments
     - Not trusting what you see on websites
     - Avoiding Scams

t. What is Cryptography?
ans: It's simply secret codes

u. What is Encryption?
ans: It is the conversion of data into unreadable codes (to prevent anyone 
     from accessing the data). It needs a key, to find the original data

w. What are Public keys?
ans: An ingenious system of proving you know your password without 
     disclosing your password.

x. What is Hashing?
ans: is a fingerprint of document











SLIDE 4






Introduction to Cryptography
















4a. What does the greek word Cryptography mean?
ans: (crypto) - secret
     (graphy) - writing

b. What is Cryptography?
ans: It's the art of making information unintelligible, allowing it to be 
     transformed back to its original form using a secret method.
     or
     It‚Äôs the art of creating and using codes to secure the transmission of 
     information
     or 
     Creating and using codes to secure information

b1. What is Encryption?
ans: It is converting Plaintext to Ciphertext

b1. What is Decryption?
ans: It is converting Ciphertext back to Plaintext

c. List 4 reasons why Cryptography is needed?
ans: - It protects stored data 
     - It protects data in transit 
     - It guards against eavesdropping and tampering
     - It could be easily used for authentication purposes

d. What is Cryptanalysis?
ans: It is the art of obtaining original message from ciphertext without 
     access to secret information (key or algorithm itself)
     In summary: It's the decoding of messages without knowing the key.

e. What is Cryptology?
ans: It is the combination of Cryptography and Cryptanalysis

f. Discuss briefly about the history of Cryptography?
ans: - Caesar Cipher: Shifts letters by a set number (e.g., CAT becomes FDW).
     - Monoalphabetic Ciphers: Assign any letter to any other letter (e.g., A 
       to B, B to D).
     - Vigen√®re Cipher: Uses a variable shift value defined by a secret key. 
       Encrypts by shifting letters based on the key.

g. Encrypt HACKNOW using CAT (With the vigenere Cipher)?
ans: Slide 4 (page 7)

h. Should algorithms be secret?
ans: - Keeping algorithms secret is impractical; they may get leaked.
     - Public algorithms allow for peer review and improvement.
     - Kirchhoff's Principle: The only secret should be the key.

     ADDITIONALLY
     - Keeping an algorithm secret prevents crackers from knowing it ü°™they 
       cannot break it 
       - Security through obscurity 
     - Difficult in practice 
       - Each time you use the algorithm with someone, they need to learn  
         it (and might leak it?) 
       - If it is implemented in some hardware, reverse-engineering it 
         could reveal the algorithm
     - Making an algorithm available makes it possible for crackers to do 
       all tests on the algorithm 
       -  And all the good guys too 
       -  As a good guy finds a loophole, she warns people 
     - Fundamental Tenet of Cryptography 
       - ‚ÄúIf lots of smart people failed to solve a problem, then it 
         probably won't be solved (soon)‚Äù 
     - Nowadays, most of commercial algorithms are public, whereas some 
       military algorithms are kept secret
     - Kirchhoff's principle 
       - A cryptographic algorithm must not be required to be secret, and 
         it must be able to fall into the hands of the enemy without 
         inconvenience 
       - Its key must be communicable and retainable without the help of 
         written notes, and changeable or modifiable at the will of the 
         correspondents 
     - The only secret in the system should be the key 


i. Discuss how difficult it is to find a key?
ans: - For example: 16-bit key = 2^16 possible keys.
     - Longer keys exponentially increase difficulty (e.g., 24-bit key takes 
       much longer to brute-force).
     - Modern keys are much longer (e.g., 80-bit keys).

j. List 3 typical attacks used in breaking Crypto Algorithms?
ans: - Ciphertext only
     - Known Plaintext
     - Chosen Plaintext

j1. Explain each of the attacks?
ans: - Ciphertext-only Attack: Attacker only has encrypted messages.
     - Known Plaintext Attack: Attacker has pairs of plaintext and ciphertext.
     - Chosen Plaintext Attack: Attacker can choose plaintext to be encrypted.

k. List the 3 types of Cryptographic Algorithm?
ans: - Secret Key Algorithms (Symmetric Cryptography)
     - Public Key algorithms (Asymmetric Cryptography)
     - Hash algorithms

k1. Explain each algorithm above?
ans: - Secret Key Algorithms (Symmetric Cryptography):
       - Same key for encryption and decryption.
       - Commonly used for confidentiality.
       - Communicating parties must share the key before communicating
     - Public Key Algorithms (Asymmetric Cryptography):
       - Uses key pairs: one public (public key), one private (private key).
       - Commonly used for authentication.
       - When a key is used to encrypt, only the other one can decrypt
     - Hash Algorithms:
       - One-way transformation to a fixed-length output (hash).
       - Commonly used for digital signatures.












SLIDE 5
Secret Key Cryptography






















5a. Why is Secret Key Cryptography Important?
ans: - Confidentiality
     - Authentication
     - Integrity
     - Secure storage

a1. Explain each listed above?
ans: - Confidentiality: Sender and receiver share a secret 
                        and use it to communicate securely
     - Authentication: Prove identity by sharing and using a key
     - Integrity:      Encrypt checksums for data integrity
     - Secure storage: Encrypt data before storing it.

b. Name the 2 techniques used for Secret Key Cryptography?
ans: - Stream ciphers
     - Block ciphers

b1. Explain both techniques above?
ans: - Stream ciphers: 
       - Encrypts data of any size.
       - Uses random number generators.
       - Example: RC4
     - Block ciphers: 
       - Encrypts fixed-size blocks.
       - Splits data into predefined size blocks (e.g., DES 
         uses 64-bit blocks, AES uses 128-bit blocks).

c. Discuss Stream Cipher (RC4)?
ans: - Generates a keystream (pseudo-random string).
     - XORs keystream with the message for encryption.
     - Decipher by XORing the encrypted message with the same 
       keystream.
     - Simple and lightweight but with weak security.
     - Example: Used in WEP and an older version of WPA

d. Discuss Block Cipher?
ans: - Encrypts fixed-length blocks (as defined by the 
       algorithm)
     - Ensures block size is optimal (to avoid wasting 
       resources or aiding crackers)
     - Example: DES uses 64-bit blocks, AES uses 128-bit block

e. How does Encryption work?
ans: - Permutation: Changes positions of bits.
     - Substitution: Replaces bits with other bits.
     - It Combines thi techniques(Permutation & Substitution) 
       to map cleartext to ciphertext and vice versa

f. Discuss DES (Data Encryption Standards)?
ans: - Published in 1977 by NIST.
     - Encrypts 64-bit blocks with a 56-bit key.
     - Uses initial permutation, 16 rounds of encryption, 
       and a final permutation.
     - Decryption involves reversing the encryption process.

     Additionally: In each round
     - The 56 bit key is used to generate a new 48 bit round key
     - A 64 bit input is converted into 64 bit output

g. Why Modes of Operation?
ans: It describes how to encrypt a message larger than one 
     block (i.e encrypting wih DES when input is larger than 
     64-bits)

h. When where the first 4 modes introduced for DES?
ans: 1981

g. List the 4 Modes of Operation?
ans: - ECB (Electronic Code Block)
     - CTR (Counter)
     - OFB (Output Feedback)
     - CFB (Cipher Feedback)

j. Discuss all 4 Modes?
ans: - Electronic Code Block (ECB):
       - Encrypts each block separately.
       - Vulnerable to identical block attacks.
     - Counter (CTR):
       - Generates a keystream offline using counters.
     - Output Feedback (OFB):
       - Works like a stream cipher.
       - Generates a keystream using initial vectors.
     - Cipher Feedback (CFB):
       - Similar to OFB but uses block plaintext in the 
         process.







SLIDE 6
Public Key Encryption
RSA





















6a. What are Prime numbers?
ans: This are numbers that can only be divided by 1 and itself
     OR
     X is a prime number if it can only be divided by X or 1

b. Give some examples of prime numbers?
ans: 2, 3, 5, 7, 11, 13, ... and so on

c. What are Relatively prime numbers?
ans: X and Y are relatively prime if they do not have any 
     common divider other than 1. e.g 9 and 10 are relatively 
     prime

d. What is the totient function ùúë(n)?
ans: It is a function that gives the number of numbers 
     smaller than n that are relatively prime to n

d1. What is the result of the below totient functions?
    - ùúë(4) = ? 
    - ùúë(5) = ? 
    - ùúë(6) = ?
    - ùúë(10) = ? 
    - ùúë(143) = ?
ans: - ùúë(4) = 2
     - ùúë(5) = 4
     - ùúë(6) = 2
     - ùúë(10) = 4
     - ùúë(143) = 120

     e.g The below shows how to find such?
     ùúë(12)
     - find prime factors of 12 (numbers that multiply to get 12)
     2*2*3
     - numbers found should be distinct
     2*3
     - use below formula
     = 12*(1-1/prime factor)*(1-1/prime factor)
     = 12*(1-1/2)*(1-1/3)
     = 4

e. Find the below?
   - 7 mod 4 = ?
   - 10 mod 2 = ?
   - 4 mod 3 = ?
   - 5 mod 8 = ?
ans: - 7 mod 4 = 3
     - 10 mod 2 = 0
     - 4 mod 3 = 1
     - 5 mod 8 = 5

     e.g How does it work?
     1. 7 mod 4 = ?
     Basically the answer is the remainder of 7/4
     7 is divided by 4 = 1 times, and the remainder is = 3
     ANSWER = 3

     2. 9 mod 2 = ?
     Basically the answer is the remainder of 8/2
     8 is divided by 2 = 4 times, and the remainder is = 1
     ANSWER = 1

     3. 2 mod 5 = ?
     Basically the answer will always be the left number if 
     the right number is greater than the left number
     ANSWER = 2

f. Find the below?
   - 13+17 mod 5 = ?
   - 8+11 mod 6 = ?
ans: - 13+17 mod 5 = ((13 mod 5) + (17 mod 5)) mod 5 
                   = (3 + 2) mod 5
                   = 5 mod 5
                   = 0

     - 8+11 mod 6  = ((8 mod 6) + (11 mod 6)) mod 6
                   = (2 + 5) mod 6
                   = 7 mod 6
                   = 1


g. Find the below?
   - 7*9 mod 5 = ?
   - 13*8 mod 6 = ?
ans: - 7*9 mod 5 = ((7 mod 5) * (9 mod 5)) mod 5 
                   = (2 * 4) mod 5
                   = 8 mod 5
                   = 3

     - 13*8 mod 6  = ((13 mod 6) * (8 mod 6)) mod 6
                   = (1 * 2) mod 6
                   = 2 mod 6
                   = 2

h1. Does 4 have a multiplicative inverse of mod 3?
ans: The goal is to find b, such that the calculation
     results in an answer of 1 as shown below
     
     (4*b) mod 3 = 1

     So lets try b = 3 to see:
     4*3 mod 3 = ((4 mod 3) * (3 mod 3)) mod 3
               = (1*0) mod 3
               = 0 mod 3
               = 0 (b=3 is Incorrect because we did not get 1 as our result)

     So lets try b=1 to see: 
     4*7 mod 3 = ((4 mod 3) * (1 mod 3)) mod 3
               = (1*1) mod 3
               = 1 mod 3
               = 1 (b=1 is Correct because we got 1 as our result, therefore 1 is the multiplicative inverse of 4 mod 3) ‚úÖ

h2. Does 4 have a multiplicative inverse mod 8?
ans: # Try it urself

h3. Does 4 have a multiplicative inverse mod 6?
ans: # Try it urself













SLIDE 7
Hash Functions


















7a. What is a Hash Function?
ans: A hash function is like a special machine that turns any 
     input (like a message) into a fixed-size number
     e.g a hash function might turn a message into a 128-bit
         number

b. List the 2 key properties of Hash Functions?
ans: - One-Way: If you have the output, it‚Äôs very hard to 
       figure out the original input
     - Collision-Free: It‚Äôs very hard to find two different 
       messages that give the same hash

c. Mention 2 common hash functions?
ans: MD5 (Produces a 128-bit hash)
     SHA-1 (Produces a 160-bit hash)

d. What is the feasibility of finding collisions in theory and in practice?
ans: In Theory: You might find two different inputs that 
                produce the same hash.
     In Practice: Finding two such inputs is extremely 
                  difficult and usually not feasible with 
                  current technology.

e. What is Data Integrity?
ans: It is ensuring that a message hasn‚Äôt been changed or 
     tampered with

f. Assume Alice and Bob want to exchange some messages with 
   data integrity. Is hashing the message and sending the hash along with the message enough?
ans: Simple Hashing Isn‚Äôt Enough:
     - Just sending the hash along with the message isn't 
       secure enough. Attackers could modify the message and 
       create a new hash that still matches.
     Solution: Use a Keyed Hash (HMAC)
     - Use a secret key along with the message to 
       make the hash. This makes it much harder for attackers 
       to fake a valid hash.

g. What does the acronym HMAC stand for?
ans: Hash-based Message Authentication code

g1. How does HMAC work?
ans: - Step 1: Compute a hash of the message with one key 
       (K1)
     - Step 2: Compute a final hash using another key (K2) 
       with the result from Step 1
     - If the key is too long, it‚Äôs shortened or hashed first 
       to fit the required size (512 bits)
     - Why Two Keys? 
       Helps protect against certain types of attacks and 
       ensures that the hash cannot be forged easily













SLIDE 8
Symmetric Authentication


















8a. What is Authentication?
ans: Confirming a person is who they claim to be

b. List the 3 types of Authentication?
ans: - Something I Am
     - Something I Know
     - Something I Possess

     Additionally:
     - Something I Am: Using something unique about you, like your fingerprint 
                       or face.
     - Something I Know:    Using a secret you know, like a password.
     - Something I Possess: Using something you have, like keys, cards or 
                            phones.

c. Discuss all 3 types of Authentication in terms of examples and security?
ans: - Something I Am
       - Examples: Fingerprints, DNA, face scans, retina scans.
       - Security: Strong but can have issues like false positives/negatives 
                   and the need to capture biometrics live to prevent theft.
     - Something I Know
       - Examples: Passwords, cryptographic secrets.
       - Security: Generally weaker as secrets can be copied without detection 
                   but still the most common method.
     - Something I Possess
       - Examples: Proximity cards, smart cards, passports, mobile phones.
       - Security: Often used in two-factor authentication, combining 
                   "something you know" with "something you possess".

d. What is Password Based Authentication?
ans: It's using a secret word or phrase to prove who you are.

     Additionally:
     - Weakest Type: Passwords can be copied or stolen without you knowing.
     - Most Common Today

f. How do attackers Break Passwords?
ans: They use information they know about you:
     - Names of family members or pets.
     - Addresses or phone numbers.
     - Car registration numbers.

g. List 3 characteristics of a good password?
ans: - Avoid real words.
     - Use combinations of uppercase, lowercase, numbers, and punctuation.
     - Longer passwords are more secure.

h. How can the login process be protected?
ans: - Slow down login processes.
     - Record failed login attempts and disable login after multiple failures.
     - Require human interaction for login (e.g., CAPTCHA)  

i. How can I gain access to multiple computer systems if 
   password based authentication is used?
ans: - Single sign-on applications (e.g Mozilla firefox).
     - Trust-based single sign-on systems (e.g Microsoft)

i. List 2 Common Authentication Methods? 
ans: - Kerberos: A secure way to prove your identity over a network.
     - Diffie-Hellman: A method for securely exchanging keys over a public 
       channel.

...












SLIDE 9
ASymmetric Authentication


















9a. Discuss Asymmetric Authentication?
ans: - Each user has a public key and private key
     - it's not possible to derive one key from the other
     - One key is known by only one entity (private key) 
     - The other key is known by everyone (public key)
     - Both keys can be used for encryption
     - Using public keys for encryption ensures confidentiality 
     - Using private keys for encryption ensures authentication

b. How does the private key work per user?
ans: - Only Alice (a user example) can make it
     - Everybody else can verify it

c. What does alice need to know to prove her identity to multiple users
   (Using Asymmetric Encryption)?
ans: Her private key
     Note:
     With Symmetric encryption, Alice would need a separate key for each 
     user

d. What is the major problem  with Asymmetric Encryption?
ans: Asymmetric encryption is slower and requires more processing power 
     compared to symmetric encryption and hash techniques.

e. How does Asymmetric Encryption for Authentication work?
ans: Instead of signing the whole message, Alice signs a summary (hash) of 
     the message.

f. Discuss hash?
ans: - A hash is like a digital fingerprint of a message.
     - Each message produces a unique hash.
     - Given a hash, you cannot easily find the original message.
     - Example Hash Algorithms: MD5 and SHA-1 (producing 128-bit or 160-bit 
       hashes).

g. Draw a diagram of how hashing works?
ans: Slide 9 (page 8)

h. The signature is trusted if and only if ____________?
ans: No one except its owner can produce it 

i. When the owner of the private key produces it, what next?
ans: The private key can then be stored in an encrypted file, protected 
     by a password 
     OR
     It can also be stored in a smart card protected by a password or PIN 

j. In a context where each user may need to prove his identity to others.   
   What must happen?
ans: Each user needs to know the public keys of the other users

k. How are these keys distributed securely?
ans: - Certificates are used to distribute public keys securely.
     - Certificate chains link certificates back to a trusted CA 
       (certificate authority)

l. What are the 2 Certificate formats?
ans: - X.509: A CA issues certificates to users and subordinate CAs.
     - PGP: (Pretty Good Privacy) Users issue their own certificates and 
            others can sign them to certify their authenticity.

m. What are the 3 Trust Models?
ans: - Monopoly Model (Centralized): one universally trusted entity
     - Oligarchy: many trust anchors e.g Used in Browsers
     - Anarchy (Web of Trust): anyone can sign a certificate for anyone else
                               e.g PGP (Pretty Good Privacy)

n. When is Certificate Revocation Needed?
ans: A certificate might need to be revoked if:
     - The private key is stolen.
     - An employee is fired.
     - A user forgets their password.

o. What are the methods used by x.509 for Revocation ?
ans: - Uses Certificate Revocation Lists (CRLs) to list revoked 
       certificates.
     - Uses Online Certificate Status Protocol (OCSP) to check certificate 
       validity in real-time.

p. What are the methods used for Revocation by PGP?
ans: - Each signer can revoke their own signatures.
     - Only the key owner can revoke their public key, but a designated 
       revoker can be specified.

p. Who can Revoke Certificates?
ans: - X.509:
       - CRLs are published in the same way as certificates and stored in 
         directories and on web pages.
       - PKIX (Public Key Infrastructure X.509) defines OCSP to check 
         certificate validity.
     - PGP:
       - Revoked signatures are sent to key servers and friends












SLIDE 10
SSL/TLS

















10a. What is SSL/TLS?
ans: SSL/TLS is a technology that's used to secure web communication by 
     addressing several security issues

b. What does SSL and TLS stand for?
ans: SSL: Secure Sockets Layer
     TLS: Transport Layer Security

c. Why SSL/TLS?
ans: - Modification Prevention
     - Impersonation Prevention
     - Data Forgery Prevention
     - Eavesdropping Prevention

c1. Explain each reason listed above?
ans: - Modification Prevention: Stops changes to messages during transmission.
     - Impersonation Prevention: Stops fake users from pretending to be 
       someone else.
     - Data Forgery Prevention: Ensures data created by intruders isn‚Äôt 
       treated as genuine.
     - Eavesdropping Prevention: Stops unauthorized users from listening in on 
       communication.

d. List the 3 Web Security Requirement?
ans: - Data Integrity
     - Confidentiality
     - Authentication

d1. Explain each of the Requirements listed above?
ans: - Data Integrity: 
       - Ensures that the received data is the same as when sent by the sender 
       - (Uses checksums, message authentication codes)
     - Confidentiality: 
       - Protects data from unauthorized access.
       - (Uses encryption)
     - Authentication: 
       - Ensures the communicating entity is who they claim to be.
       - Essential for servers, optional for clients.
       - Uses methods like challenge-response, username/password, certificates.

d2. What are the Objectives of SSL/TLS: 
ans: - Authenticate two entities
     - Establish session keys

d. List the 2 Web Security Approaches?
ans: - Under TCP (IPSec)
       - Requires OS changes, no changes to applications over TCP
     - Over TCP (SSL/TLS)
       - No OS changes needed (applications over TCP need changes)
       - TCP‚Äôs reliable service means SSL doesn‚Äôt need extra controls or 
         retransmission

e. Discuss history of SSL/TLS?
ans: - Secure Network Programming (SNP) API (1993):
       - Encapsulates sensitive information in a secure layer.
     - SSL (Secure Socket Layer):
       - Proposed by Netscape.
       - SSL v1 had security flaws, never released.
       - SSL v2 released in 1994, had security issues.
       - Microsoft‚Äôs version: Private Communication Technology (PCT).
       - SSL v3 released in 1996.
     - TLS (Transport Layer Security):
       - Internet standard version of SSL.
       - TLS 1.0 published in 1999 by IETF.

f. List the 3 Basic Protocols?
ans: - Client Wants Secure Connection:
       - Requires server authentication, data integrity, and confidentiality.
     - Server‚Äôs X.509 Certificate:
       - From a trusted Certification Authority (CA).
     - Client‚Äôs Web Browser:
       - Encrypts a random number using the server‚Äôs public key.
       - Sends the encrypted number to the server.
       - Establishes a secure channel once the server responds correctly.

g. List out the 4 phases to SSL Handshake?
ans: - Phase 1: Client and server exchange supported SSL versions, algorithms, 
                nonces, and session ID
     - Phase 2: Server sends public key certificate, client certificate 
                request, key parameters, and ‚ÄúServer Hello Done‚Äù message.
     - Phase 3: Client sends key exchange parameters, optional public key 
                certificate, and verification message.
     - Phase 4: Client and server agree on ciphers and finish the handshake.

h. Draw a diagram of the SSL Handshake Summary?
ans: Slide 10 (page 12)

i. 

























