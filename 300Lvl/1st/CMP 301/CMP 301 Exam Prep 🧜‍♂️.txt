CMP 301 STUDY


How To Study the Material

Tips: 
- Best to study using the github repo link
  https://github.com/danielchukwu/School-/tree/master/300Lvl/1st

- Use a laptop or device with a relatively big screen to study
- Glancing through the questions and answers may not cement the knowledge. 
  But answering them as you go through them on some book or paper repeatedly 
  definitely will

- Get Note from github repo link below
https://github.com/danielchukwu/School-/tree/master/SchoolNotes/300Lvl/1



COMPUTER ARCHITECTURE

1a. Draw the Computer Architecture diagram
 Ans: 

 b. What are the 3 types of Buses?
 Ans: Address Bus, Data Bus, Control Bus

 c. Whenever their is a program, there must always be a __________?
 Ans: Processor

 d. Define Computer Architecture (CA)?
 Ans: This is a science & an art of selecting & interconnecting hardware components 
      to create computers that meet functions, performance and cost goals.

d1. Define Logic Circuit?
Ans: A logic circuit is an electronic circuit that performs logical operations 
    on one or more inputs to produce a desired output.

d2. Define Truth Table (TT)?
Ans: A Truth Table is a mathematical table used to define a logic function by 
    specifying the outputs for each possible combination of inputs.

d3. Define Logic Gate?
Ans: Logic Gate are the basic building block of any digital system 
     Extra: they help us perform logical operations (such as AND, OR, NOT, etc.)

 e. Computers can be broadly categorized into 3 groups. List them?
 Ans: - The Processor
      - The Memory 
      - The Input and Output unit.

 f. Briefly explain what The Processor, The Memory and The Input and Output unit
 Ans: - The Processor(CPU): 
          It is the logic circuitry that responds to and processes the basic 
          instructions that drive a computer

      - The Memory(RAM):
          It stores program files and data files. e.g Music Player, vlc, photoshop.
          Program files contain software instructions (source program files and
          executable files)
          e.g 
          Internal Memory (Primary Memory) reerred to as RAM

      - The Input and Output unit: 
          This helps us send data into the system and then bring info out of the 
          system

 g. The screen of the computer is divided into _______________________?
 Ans: Small Regular Boxes called Pixels.

 h. The more the pixel on the screen, the ________________________?
 Ans: clearer the picture

 i. In order for coloured pictures to be displayed what happens?
 Ans: Different number of pixels representing different colours is used

 j. How are 2 bits and 3 bits pixels stored?
 Ans: 2² => 4
      0 0
      0 1
      1 0
      1 1

      2³ => 8
      0 0 0
      0 0 1
      0 1 0
      0 1 1
      1 0 0
      1 0 1
      1 1 0
      1 1 1

 k. Whose Job is it to fetch instructions, decode it and then execute those 
    instructions?
 Ans: The Processor

 l. What are Buses in computer?
 Ans: These are sets of wires used to transfer data in and out of a computer system

 m. What are the Types of Computer Buses?
 Ans: Address, Data, Control

 i. Explain the 3 Types Buses?
 Ans: Address Bus
         It holds the address of the location where a particular data is stored
      Data Bus
         It holds the data and transports it into the address location(in & out 
         of the processor/memory)
      Control Bus
         It holds the instructions of what is to be done with data (in & out of 
         the memory)

 n. List the 3 steps in the Instruction cycle?
 Ans: Fetch -----> Decode ------> Execute

 i. Explain
 Ans: Fetch:     When the processor reads information from the memory
      Decode:    Understanding the information/instruction
      Executing: Performing the task or operation

 p. What are the 2 operations that can be performed with the memory?
 Ans: Read or Write
 



LECTURE 2 & 3

LOGIC GATES
a. __________ are the basic building block of any digital system that performs a 
  logical operation (such as AND, OR, NOT, etc.)
 Ans: Logic gate

b. How many inputs does a logic gate take?
Ans: 1 and above

c. Explain The AND Gate, The OR GATE and The NOT GATE?
Ans: 
     AND GATE: The output is 1 only when both inputs are 1
     OR GATE:  The output is 1 if atleast 1 of the input is 1
     NOT GATE: The output is 1 if the input is 0. This takes only one input and 
               the result is always the opposite of the input
         
   i. Draw the above GATES and thier TT(Truth Table)
   Ans: 

d. Explain The NAND Gate, The NOR GATE and The EX-OR GATE?
     NAND GATE: The inputs are AND'ED and then the result is NOT'ED
     NOR GATE:  The inputs are OR'ED and then the result is NOT'ED
     EX-OR GATE: c = AB¯ + A¯B
     EX-NOR GATE: c = A¯B¯ + AB
         
   i. Draw the above GATES and thier TT(Truth Table)
   Ans: 

                       
NOTE:                  
- A¯ is the same as A  _
                       _
- A¯¯ is the same as   A



f. List all 10 of the Boolean Laws (Rules)
Ans:
     1. Idempotency Law    A+A = A   | A.A = A
     2. Null Law           A+1 = 1   | A.0 = 0
     3. Identity Law       A+0 = A   | A.1 = A
     4. Commutative Law    A+B = B+A | A.B = B.A
     5. Associative Law    (A+B)+C = A+(B+C)   |    (A.B)C = A(B.C)
     6. Distributive Law   A(B+C) = AB + AC    |    A+BC = (A+B)(A+C) 
     7. Absorbtion Law     A+AB = A            |    A(A+B) = A
     8. Complement Law     A+A¯ = 1            |    A.A¯ = 0
     9. Demorgans Law      (A+B)¯ = A¯.B¯      |    (A.B)¯ = A¯ + B¯
    10. Inverse Law        A¯¯ = A
    **Memorize (INICADACDI)




g. Using the Above Boolean Laws Solve the below Expressions
                     _
   i.   Proof that A+AB = A+B
                       __________
                             __
   ii.  Simplify   F = ( A + BC )
                        ________
   iii. Simplify   F = (AB + CD)
                       ______________
                         ____   ___
   iv.  Simplify   F = ( A+BC + AB¯ )

   v.   Simplify   F = (A¯+B¯)(A+B)
                         _   ___
   vi.  Simplify   F = ( A + AB¯ )

   vii. Draw the Logic Circut of all the problems solution below
        Tip:  Get the note and learn how to create logic circuts. Use link below
        Link: https://github.com/danielchukwu/School-/tree/master/SchoolNotes/300Lvl/1


Solution
                _
i. Proof that A+AB = A+B
       _
   = A+AB               # use distributive law 
          _                                     _
   = (A + A)(A + B)     # use Complement law (A + A = 1)
  
   =    1   (A + B)     # use distributive law

   = (1 * A) + (1 * B)  # use Identity law

   = (A) + (B)          # just add
   
   = A + B   ✅

                   __________
                         __
ii. Simplify   F = ( A + BC )
     __________
           __
   = ( A + BC )     # apply demorgans law (A+BC changes to A*BC)
   
          __
      _   __                            __
   =  A * BC        # apply inverse law __ cancels out
      _
   =  A * BC        ✅


   
                    _________
iii. Simplify   F = (AB + CD)
     _________
   = (AB + CD)   # apply demorgans law (+ changes to *)
      __   __
   = (AB * CD)   # apply demorgans law (* changes to +)
      _ _  _ _
   = (A+B)(C+D)  ✅

                   ______________
                     ____   ___
iv. Simplify   F = ( A+BC + AB¯ )
   
      _____________
       ____   ___
   = ( A+BC + AB¯ )     # apply demorgans law (+ changes to *)
      _____   ____
       ____   ___                           ____
   = ( A+BC * AB¯ )     # apply inverse law ____ cancels each other

   = ( A+BC * AB¯ )     # multiply both sides
 
   = ( AAB¯ + AB¯BC)    # apply idempontency law (A*A = A)

   = ( AB¯  + AB¯BC)    # apply complement law (A * A¯ = 0)

   = ( AB¯  + A*0*C)    # multiply

   = ( AB¯ + 0 )        # add

   =  AB¯


v. Simplify F = (A¯+B¯)(A+B)

   = (A¯+B¯)(A+B)              # multiply

   = A¯A + A¯B + B¯A + B¯B     # apply complement law (A*A¯ = 0)

   =  0  + A¯B + B¯A +  0

   = A¯B + B¯A                 ✅

                   _   ___
vi. Simplify F = ( A + AB¯ )   
       _   ___
   = ( A + AB¯ )     # apply demorgans law (* changes to +)
       _   _   __                        __
   =   A + A + B¯    # apply inverse law  _ cancels each other
       _   _                                  _   _   _
   =   A + A + B     # apply idempotency law (A + A = A)
       _
   =   A + B         ✅



v. Do this yourself using the note. Link to get Note down below
   Link: https://github.com/danielchukwu/School-/tree/master/SchoolNotes/300Lvl/1




LECTURE 4

3. Draw a 2 variable K-Map in its two possible forms?
Ans: (Tip: use note to answer this)

b. Draw a 3 variable K-Map in its four possible forms?
Ans: (Tip: use note to answer this)

c. Draw a 4 variable K-Map in its two possible forms?
Ans: (Tip: use note to answer this)


4. What is a K-Map?
Ans: A K-Map (Karnaugh Map) is a graphical tool used in digital logic design to 
     simplify Boolean expressions and to minimize the number of gates in an 
     electronic circuit.

     OR 

     k-Map (Karnaugh map) is a method used for simplifying Boolean algebra 
     expressions

b. List 4 rules for grouping in K-Map?
Ans: - Groups may contain 0 for max-terms and 1 for min-terms
     - We can group 0's & 1's to 2⁰, 2¹, 2², ..., 2ⁿ
     - Each Group should be as large as possible
     - Cells containing 1's must be grouped for SOP and 
       cells containing 0's must be grouped for POS
     - Groups may overlap
     - Opposite and Corner Grouping is allowed
     - There should be as few groups as possible


   


















